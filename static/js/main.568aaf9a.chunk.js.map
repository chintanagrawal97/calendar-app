{"version":3,"sources":["plus.svg","edit.svg","components/CalendarTile.js","components/Calendar.js","components/Home.js","actions/index.js","components/NewReminder.js","components/UpdateReminder.js","components/TodoItems.js","components/Todo.js","components/UpdateTodo.js","reducer/reminder.js","reducer/todo.js","reducer/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CalendarTile","props","react_default","a","createElement","className","date","style","overflow","textOverflow","event","map","item","react_router_dom","to","pathname","concat","type","name","state","key","id","dayName","mapToDate","todos","reminder","hashObj","i","length","undefined","push","Object","objectSpread","Calendar","calendarHeader","day","_this$props","_this","dayEvents","dayArr","DayTile","components_CalendarTile","this","Component","connect","Home","components_Calendar","es_alert","message","description","showIcon","marginRight","src","plusIcon","alt","title","todoIcon","TextArea","Input","NewReminder","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateState","value","setState","defineProperty","handleInputChange","saveReminder","_this$state","data","addReminder","success","updateReminder","_this$state2","editReminder","handleDelete","deleteReminder","redirect","_this2","react_router","update","SubmitButton","es_button","onClick","card","width","input","onChange","e","target","min","max","rows","backgroundColor","color","UpdateReminder","components_NewReminder","location","TodoItems","es_checkbox","checked","completed","complete","text","delete","Todo","addTodo","todoList","todoInput","Math","ceil","random","saveTodo","updateTodo","_this$state3","editTodo","deleteTodo","deleteTodoItem","filter","todoItemCompleted","save","divider","marginTop","UpdateTodo","components_Todo","arguments","action","toConsumableArray","todo","combineReducers","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","apply","App","es","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.568aaf9a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/plus.fd4e8664.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.2927f8de.svg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CalendarTile = props => {\r\n  return (\r\n    <div className=\"calendar-tile\">\r\n      <div>{props.date}</div>\r\n      <div style={{ overflow: \"hidden\", textOverflow: \"ellipsis\" }}>\r\n        {props.event.map(item => (\r\n          <div>\r\n            <Link\r\n              to={{ pathname: `/${item.type}/${item.name}`, state: { item } }}\r\n              key={item.id}\r\n            >\r\n              {item.name}\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarTile;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CalendarTile from \"./CalendarTile\";\r\nconst dayName = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\n\r\nconst mapToDate = (todos, reminder) => {\r\n  const hashObj = [];\r\n  for (let i = 0; i < todos.length; ++i) {\r\n    const { date } = todos[i];\r\n    if (hashObj[date] !== undefined) {\r\n      hashObj[date].push({ ...todos[i], type: \"todo\" });\r\n    } else {\r\n      hashObj[date] = [{ ...todos[i], type: \"todo\" }];\r\n    }\r\n  }\r\n  for (let i = 0; i < reminder.length; ++i) {\r\n    const { date } = reminder[i];\r\n    if (hashObj[date] !== undefined) {\r\n      hashObj[date].push({ ...reminder[i], type: \"reminder\" });\r\n    } else {\r\n      hashObj[date] = [{ ...reminder[i], type: \"reminder\" }];\r\n    }\r\n  }\r\n  return hashObj;\r\n};\r\n\r\nclass Calendar extends Component {\r\n  calendarHeader = () =>\r\n    dayName.map(name => (\r\n      <div>\r\n        <b>{name}</b>\r\n      </div>\r\n    ));\r\n  day = () => {\r\n    const { todos, reminder } = this.props;\r\n    const dayEvents = mapToDate(todos, reminder);\r\n    const dayArr = [];\r\n    for (let i = 1; i < 32; ++i) {\r\n      const DayTile = (\r\n        <CalendarTile key={i} date={i} event={dayEvents[i] || []} />\r\n      );\r\n      dayArr.push(DayTile);\r\n    }\r\n    return dayArr;\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"calendar-container\">\r\n        <header className=\"calendar-header\">{this.calendarHeader()}</header>\r\n        <div className=\"week\">{this.day()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  todos: state.todos,\r\n  reminder: state.reminder\r\n});\r\n\r\nexport default connect(mapStateToProps)(Calendar);\r\n","import React, { Component } from \"react\";\r\nimport { Alert } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Calendar from \"./Calendar\";\r\nimport plusIcon from \"../plus.svg\";\r\nimport todoIcon from \"../edit.svg\";\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"cell11\">\r\n          <h1>Calendar</h1>\r\n        </div>\r\n        <div className=\"cell22\">\r\n          <Calendar />\r\n        </div>\r\n        <div className=\"icon-container\">\r\n          <Alert\r\n            message=\"Informational Notes\"\r\n            description=\"This App is for demo purpose, So Number are used to depict Calendar. \"\r\n            type=\"info\"\r\n            showIcon\r\n            style={{ marginRight: \"2%\" }}\r\n          />\r\n          <div className=\"icon\">\r\n            <Link to=\"/reminder/create\">\r\n              <img src={plusIcon} alt=\"plus\" title=\"Create Reminder\" />\r\n            </Link>\r\n          </div>\r\n          <div className=\"icon\">\r\n            <Link to=\"/todo/create\">\r\n              <img src={todoIcon} alt=\"plus\" title=\"Create Todo\" />\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","let id = 1;\r\n\r\nexport const addTodo = data => ({\r\n  type: \"ADD_TODO\",\r\n  data: { id: id++, ...data }\r\n});\r\n\r\nexport const editTodo = data => ({\r\n  type: \"EDIT_TODO\",\r\n  data\r\n});\r\n\r\nexport const deleteTodo = data => ({\r\n  type: \"DELETE_TODO\",\r\n  data\r\n});\r\n\r\nexport const addReminder = data => ({\r\n  type: \"ADD_REMINDER\",\r\n  data: { id: id++, ...data }\r\n});\r\n\r\nexport const editReminder = data => ({\r\n  type: \"EDIT_REMINDER\",\r\n  data\r\n});\r\n\r\nexport const deleteReminder = data => ({\r\n  type: \"DELETE_REMINDER\",\r\n  data\r\n});\r\n","import React, { Component } from \"react\";\r\nimport { Input, Card, Button, message } from \"antd\";\r\nimport { Redirect } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport { addReminder, editReminder, deleteReminder } from \"../actions\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nclass NewReminder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { event } = props;\r\n    let state = {\r\n      name: \"\",\r\n      date: 1,\r\n      description: \"\"\r\n    };\r\n    if (event) {\r\n      state = {\r\n        name: event.name,\r\n        date: event.date,\r\n        description: event.description\r\n      };\r\n    }\r\n    this.state = {\r\n      ...state\r\n    };\r\n  }\r\n\r\n  updateState = (key, value) => {\r\n    this.setState({ [key]: value });\r\n  };\r\n\r\n  handleInputChange = (key, value) => {\r\n    this.updateState(key, value);\r\n  };\r\n\r\n  saveReminder = () => {\r\n    const { name, date, description } = this.state;\r\n    const data = {\r\n      name,\r\n      date,\r\n      description\r\n    };\r\n    this.props.addReminder(data);\r\n    message.success(\"Reminder Added\");\r\n  };\r\n\r\n  updateReminder = () => {\r\n    const { name, date, description } = this.state;\r\n    const data = {\r\n      name,\r\n      date,\r\n      description,\r\n      id: this.props.event.id\r\n    };\r\n    this.props.editReminder(data);\r\n    message.success(\"Reminder Updated\");\r\n  };\r\n\r\n  handleDelete = () => {\r\n    const data = { id: this.props.event.id };\r\n    this.props.deleteReminder(data);\r\n    message.success(\"Todo Deleted\");\r\n    this.setState({ redirect: true });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    const { update } = this.props;\r\n    const SubmitButton = update ? (\r\n      <Button type=\"primary\" onClick={this.updateReminder}>\r\n        Update Reminder\r\n      </Button>\r\n    ) : (\r\n      <Button type=\"primary\" onClick={this.saveReminder}>\r\n        Save Reminder\r\n      </Button>\r\n    );\r\n    return (\r\n      <div className=\"reminder\">\r\n        <Card title=\"Create Reminder\" style={{ width: 300 }}>\r\n          <div className=\"items\">\r\n            <label>Event Name</label>\r\n            <Input\r\n              onChange={e => this.handleInputChange(\"name\", e.target.value)}\r\n              value={this.state.name}\r\n            />\r\n          </div>\r\n          <div className=\"items\">\r\n            <label>Date </label>\r\n            <Input\r\n              type=\"Number\"\r\n              min={1}\r\n              max={31}\r\n              onChange={e => this.handleInputChange(\"date\", e.target.value)}\r\n              value={this.state.date}\r\n            />\r\n          </div>\r\n          <div className=\"items\">\r\n            <label>Description</label>\r\n            <TextArea\r\n              rows={4}\r\n              onChange={e =>\r\n                this.handleInputChange(\"description\", e.target.value)\r\n              }\r\n              value={this.state.description}\r\n            />\r\n          </div>\r\n          <div className=\"items\">{SubmitButton}</div>\r\n          <div className=\"items\">\r\n            {update && (\r\n              <Button\r\n                onClick={this.handleDelete}\r\n                style={{ backgroundColor: \"red\", color: \"white\" }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  reminder: state.reminder\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addReminder, editReminder, deleteReminder }\r\n)(NewReminder);\r\n","import React, { Component } from \"react\";\r\nimport NewReminder from \"./NewReminder\";\r\n\r\nclass UpdateReminder extends Component {\r\n  render() {\r\n    return <NewReminder event={this.props.location.state.item} update={true} />;\r\n  }\r\n}\r\n\r\nexport default UpdateReminder;\r\n","import React from \"react\";\r\nimport { Checkbox, Card, Button } from \"antd\";\r\n\r\nexport default props => {\r\n  return (\r\n    <Card className=\"todo-items\">\r\n      <Checkbox\r\n        checked={props.item.completed}\r\n        onChange={e => props.complete(e.target.checked)}\r\n      >\r\n        {props.item.text}\r\n      </Checkbox>\r\n      <Button\r\n        onClick={props.delete}\r\n        style={{ backgroundColor: \"red\", color: \"white\" }}\r\n      >\r\n        Remove\r\n      </Button>\r\n    </Card>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Input, Card, Button, Divider, message } from \"antd\";\r\nimport { Redirect } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTodo, editTodo, deleteTodo } from \"../actions\";\r\nimport TodoItems from \"./TodoItems\";\r\n\r\nclass Todo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { event } = this.props;\r\n    let state = {\r\n      name: \"\",\r\n      date: 1,\r\n      todoInput: \"\",\r\n      todoList: [],\r\n      save: false\r\n    };\r\n    if (event) {\r\n      state = {\r\n        name: event.name,\r\n        date: event.date,\r\n        todoInput: \"\",\r\n        todoList: event.todoList\r\n      };\r\n    }\r\n    this.state = {\r\n      ...state\r\n    };\r\n  }\r\n\r\n  updateState = (key, value) => {\r\n    this.setState({ [key]: value });\r\n  };\r\n\r\n  handleInputChange = (key, value) => {\r\n    this.updateState(key, value);\r\n  };\r\n\r\n  addTodo = () => {\r\n    const { todoList, todoInput } = this.state;\r\n    const id = Math.ceil(\r\n      Math.random() * 10000000000000000000000000000000000000\r\n    );\r\n    todoList.push({ text: todoInput, completed: false, id });\r\n    this.updateState(\"todoList\", todoList);\r\n  };\r\n\r\n  saveTodo = () => {\r\n    const { name, date, todoList } = this.state;\r\n    const data = {\r\n      name: name === \"\" ? \"No Name\" : name,\r\n      date,\r\n      todoList\r\n    };\r\n    this.props.addTodo(data);\r\n    message.success(\"Todo Added\");\r\n  };\r\n\r\n  updateTodo = () => {\r\n    const { name, date, todoList } = this.state;\r\n    const data = {\r\n      name: name === \"\" ? \"No Name\" : name,\r\n      date,\r\n      todoList,\r\n      id: this.props.event.id\r\n    };\r\n    this.props.editTodo(data);\r\n    message.success(\"Todo updated\");\r\n  };\r\n\r\n  handleDelete = () => {\r\n    const data = {\r\n      id: this.props.event.id\r\n    };\r\n    this.props.deleteTodo(data);\r\n    message.success(\"Todo Deleted\");\r\n    this.setState({ redirect: true });\r\n  };\r\n\r\n  deleteTodoItem = id => {\r\n    const todoList = this.state.todoList.filter(item => item.id !== id);\r\n    this.updateState(\"todoList\", todoList);\r\n  };\r\n\r\n  todoItemCompleted = (id, value) => {\r\n    const todoList = this.state.todoList.map(item => {\r\n      if (item.id === id) {\r\n        item.completed = value;\r\n      }\r\n      return item;\r\n    });\r\n    this.updateState(\"todoList\", todoList);\r\n  };\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    const { update } = this.props;\r\n    const SubmitButton = update ? (\r\n      <Button type=\"primary\" onClick={this.updateTodo}>\r\n        Update Todo\r\n      </Button>\r\n    ) : (\r\n      <Button type=\"primary\" onClick={this.saveTodo}>\r\n        Save Todo\r\n      </Button>\r\n    );\r\n    return (\r\n      <div className=\"todo\">\r\n        <Card title=\"Create Todo\" style={{ width: 300 }}>\r\n          <div className=\"items\">\r\n            <label>Name</label>\r\n            <Input\r\n              onChange={e => this.handleInputChange(\"name\", e.target.value)}\r\n              value={this.state.name}\r\n            />\r\n          </div>\r\n          <div className=\"items\">\r\n            <label>Date </label>\r\n            <Input\r\n              type=\"Number\"\r\n              min={1}\r\n              max={31}\r\n              onChange={e => this.handleInputChange(\"date\", e.target.value)}\r\n              value={this.state.date}\r\n            />\r\n          </div>\r\n          <Divider />\r\n          <div className=\"items\">\r\n            <label>Add Todo's</label>\r\n            <Input\r\n              onChange={e =>\r\n                this.handleInputChange(\"todoInput\", e.target.value)\r\n              }\r\n              value={this.state.todoInput}\r\n            />\r\n            <Button\r\n              onClick={this.addTodo}\r\n              style={{\r\n                backgroundColor: \"#13CE66\",\r\n                color: \"white\",\r\n                marginTop: \"2%\"\r\n              }}\r\n            >\r\n              Add\r\n            </Button>\r\n          </div>\r\n          {this.state.todoList.map(item => (\r\n            <TodoItems\r\n              complete={value => this.todoItemCompleted(item.id, value)}\r\n              delete={() => this.deleteTodoItem(item.id)}\r\n              key={item.id}\r\n              item={item}\r\n            />\r\n          ))}\r\n          <Divider />\r\n          <div className=\"items\">{SubmitButton}</div>\r\n          <div className=\"items\">\r\n            {update && (\r\n              <Button\r\n                onClick={this.handleDelete}\r\n                style={{ backgroundColor: \"red\", color: \"white\" }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    todos: state.todos\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addTodo, editTodo, deleteTodo }\r\n)(Todo);\r\n","import React, { Component } from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nclass UpdateTodo extends Component {\r\n  render() {\r\n    return <Todo event={this.props.location.state.item} update={true} />;\r\n  }\r\n}\r\n\r\nexport default UpdateTodo;\r\n","const reminder = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"ADD_REMINDER\":\r\n      return [...state, action.data];\r\n    case \"EDIT_REMINDER\":\r\n      return state.map(event => {\r\n        if (event.id === action.data.id) {\r\n          return action.data;\r\n        }\r\n        return event;\r\n      });\r\n    case \"DELETE_REMINDER\":\r\n      return state.filter(event => event.id !== action.data.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reminder;\r\n","const todo = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TODO\":\r\n      return [...state, action.data];\r\n    case \"EDIT_TODO\":\r\n      return state.map(event => {\r\n        if (event.id === action.data.id) {\r\n          return action.data;\r\n        }\r\n        return event;\r\n      });\r\n    case \"DELETE_TODO\":\r\n      return state.filter(event => event.id !== action.data.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todo;\r\n","import { combineReducers } from \"redux\";\r\nimport reminder from \"./reminder\";\r\nimport todo from \"./todo\";\r\n\r\nexport default combineReducers({\r\n  reminder: reminder,\r\n  todos: todo\r\n});\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducer\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst initialState = {\r\n  todos: [],\r\n  reminder: []\r\n};\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport Home from \"./components/Home\";\nimport NewReminder from \"./components/NewReminder\";\nimport UpdateReminder from \"./components/UpdateReminder\";\nimport UpdateTodo from \"./components/UpdateTodo\";\nimport Todo from \"./components/Todo\";\nimport store from \"./store\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/reminder/create\" component={NewReminder} />\n            <Route exact path=\"/reminder/:name\" component={UpdateReminder} />\n            <Route exact path=\"/todo/create\" component={Todo} />\n            <Route exact path=\"/todo/:name\" component={UpdateTodo} />\n          </Switch>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}